/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package es.uned.TFGDavidGiner.demo;

/**
 * Ventana de demostración diseñada para probar el anidamiento profundo y recursivo
 * del componente {@code SimpleContainer}.
 * <p>
 * Esta clase sirve como un caso de prueba visual para demostrar la robustez
 * del patrón de diseño Composite, mostrando múltiples instancias de
 * {@code SimpleContainer} anidadas unas dentro de otras a varios niveles de
 * profundidad. También verifica que la comunicación entre los componentes hoja
 * ({@code ComponenteA} y {@code ComponenteB}) se mantiene funcional incluso en
 * estructuras complejas.
 *
 * @author dginer
 * @version 1.0
 * @since 2025-07-13
 */
public class SimpleContainerAnidados extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(SimpleContainerAnidados.class.getName());

    /**
     * Inicializa los componentes de la interfaz gráfica.
     * Constructor por defecto.
     * Crea una nueva instancia del formulario de prueba de anidamiento e
     * inicializa todos los componentes gráficos llamando a {@link #initComponents()}.
     */
    public SimpleContainerAnidados() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        simpleContainer1 = new es.uned.TFGDavidGiner.components.containers.SimpleContainer();
        componenteA7 = new es.uned.TFGDavidGiner.components.leafs.ComponenteA();
        simpleContainer2 = new es.uned.TFGDavidGiner.components.containers.SimpleContainer();
        componenteA6 = new es.uned.TFGDavidGiner.components.leafs.ComponenteA();
        simpleContainer3 = new es.uned.TFGDavidGiner.components.containers.SimpleContainer();
        componenteA5 = new es.uned.TFGDavidGiner.components.leafs.ComponenteA();
        simpleContainer4 = new es.uned.TFGDavidGiner.components.containers.SimpleContainer();
        componenteA4 = new es.uned.TFGDavidGiner.components.leafs.ComponenteA();
        simpleContainer5 = new es.uned.TFGDavidGiner.components.containers.SimpleContainer();
        componenteA3 = new es.uned.TFGDavidGiner.components.leafs.ComponenteA();
        simpleContainer6 = new es.uned.TFGDavidGiner.components.containers.SimpleContainer();
        componenteA2 = new es.uned.TFGDavidGiner.components.leafs.ComponenteA();
        simpleContainer7 = new es.uned.TFGDavidGiner.components.containers.SimpleContainer();
        componenteB1 = new es.uned.TFGDavidGiner.components.leafs.ComponenteB();
        componenteA1 = new es.uned.TFGDavidGiner.components.leafs.ComponenteA();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        simpleContainer1.getContentPane().add(componenteA7);

        simpleContainer2.getContentPane().add(componenteA6);

        simpleContainer3.getContentPane().add(componenteA5);

        simpleContainer4.getContentPane().add(componenteA4);

        simpleContainer5.getContentPane().add(componenteA3);

        simpleContainer6.setDividerLocation(100);
        simpleContainer6.getContentPane().add(componenteA2);

        simpleContainer7.setDividerLocation(300);
        simpleContainer7.getContentPane().add(componenteB1);
        simpleContainer7.getContentPane().add(componenteA1);

        simpleContainer6.getContentPane().add(simpleContainer7);

        simpleContainer5.getContentPane().add(simpleContainer6);

        simpleContainer4.getContentPane().add(simpleContainer5);

        simpleContainer3.getContentPane().add(simpleContainer4);

        simpleContainer2.getContentPane().add(simpleContainer3);

        simpleContainer1.getContentPane().add(simpleContainer2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(simpleContainer1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 820, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(simpleContainer1, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Punto de entrada principal para la aplicación de demostración.
     * <p>
     * Configura el Look and Feel de la interfaz a "Nimbus" y, a continuación,
     * crea y muestra el formulario {@code SimpleContainerAnidados} en el
     * Event Dispatch Thread (EDT) de Swing para garantizar la seguridad de los hilos.
     *
     * @param args los argumentos de la línea de comandos (no se utilizan).
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new SimpleContainerAnidados().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private es.uned.TFGDavidGiner.components.leafs.ComponenteA componenteA1;
    private es.uned.TFGDavidGiner.components.leafs.ComponenteA componenteA2;
    private es.uned.TFGDavidGiner.components.leafs.ComponenteA componenteA3;
    private es.uned.TFGDavidGiner.components.leafs.ComponenteA componenteA4;
    private es.uned.TFGDavidGiner.components.leafs.ComponenteA componenteA5;
    private es.uned.TFGDavidGiner.components.leafs.ComponenteA componenteA6;
    private es.uned.TFGDavidGiner.components.leafs.ComponenteA componenteA7;
    private es.uned.TFGDavidGiner.components.leafs.ComponenteB componenteB1;
    private es.uned.TFGDavidGiner.components.containers.SimpleContainer simpleContainer1;
    private es.uned.TFGDavidGiner.components.containers.SimpleContainer simpleContainer2;
    private es.uned.TFGDavidGiner.components.containers.SimpleContainer simpleContainer3;
    private es.uned.TFGDavidGiner.components.containers.SimpleContainer simpleContainer4;
    private es.uned.TFGDavidGiner.components.containers.SimpleContainer simpleContainer5;
    private es.uned.TFGDavidGiner.components.containers.SimpleContainer simpleContainer6;
    private es.uned.TFGDavidGiner.components.containers.SimpleContainer simpleContainer7;
    // End of variables declaration//GEN-END:variables
}
