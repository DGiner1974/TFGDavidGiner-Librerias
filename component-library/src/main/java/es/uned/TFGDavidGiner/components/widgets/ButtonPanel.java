/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package es.uned.TFGDavidGiner.components.widgets;

import javax.swing.event.EventListenerList;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent; 
import es.uned.TFGDavidGiner.core.interfaces.IValidation;

/**
 * Panel reutilizable que proporciona un ButtonPanel estándar con "Aceptar" y "Cancelar".
 * <p>
 * Este componente está diseñado para interactuar con otros componentes (hermanos)
 * dentro del mismo contenedor. Delega la lógica de validación y reseteo a aquellos
 * componentes que implementen la interfaz {@link IValidation}.
 *
 * @author david
 * @version 1.0
 * @since 12-07-2025
 */
public class ButtonPanel extends javax.swing.JPanel {

    /**
     * Gestiona la lista de listeners de eventos para este componente.
     * Es la forma recomendada por Swing para manejar múltiples tipos de listeners.
     */
    private EventListenerList listenerList = new EventListenerList();
    
    /**
     * Comando de acción para el evento del botón "Aceptar".
     * Este valor se establece como el comando de acción en el {@link ActionEvent}
     * disparado cuando se presiona el botón de aceptar.
     * @see java.awt.event.ActionEvent#getActionCommand()
     */
    public static final String ACCEPT_COMMAND = "aceptar";
    
     /**
     * Comando de acción para el evento del botón "Cancelar".
     * Este valor se establece como el comando de acción en el {@link ActionEvent}
     * disparado cuando se presiona el botón de cancelar.
     * @see java.awt.event.ActionEvent#getActionCommand()
     */
    public static final String CANCEL_COMMAND = "cancelar";
    
    /**
     * Crea un nuevo formulario ButtonPanel.
     * <p>
     * Constructor por defecto que inicializa los componentes visuales del panel.
     */
    public ButtonPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        add(btnAceptar, new java.awt.GridBagConstraints());

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 18, 8, 0);
        add(btnCancelar, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

     /**
     * Registra un ActionListener para recibir eventos de este ButtonPanel.
     * @param listener el ActionListener a añadir.
     */
    public void addActionListener(ActionListener listener) {
        listenerList.add(ActionListener.class, listener);
    }

    /**
     * Elimina un ActionListener de este ButtonPanel.
     * @param listener el ActionListener a eliminar.
     */
    public void removeActionListener(ActionListener listener) {
        listenerList.remove(ActionListener.class, listener);
    }

    /**
     * Notifica a todos los listeners registrados que ha ocurrido una acción.
     * @param e El ActionEvent a disparar.
     */
    protected void fireActionPerformed(ActionEvent e) {
        // Obtiene la lista de listeners de tipo ActionListener
        Object[] listeners = listenerList.getListenerList();
        // Itera hacia atrás para permitir que los listeners se eliminen a sí mismos de forma segura
        for (int i = listeners.length - 2; i >= 0; i -= 2) {
            if (listeners[i] == ActionListener.class) {
                ((ActionListener) listeners[i + 1]).actionPerformed(e);
            }
        }
    }
    
    /**
     * Gestiona el evento de clic en el botón 'Cancelar'.
     * <p>
     * Dispara un {@link ActionEvent} con el comando de acción definido por
     * {@link #CANCEL_COMMAND} para notificar a los listeners externos.
     *
     * @param evt El evento de acción que se ha producido (ignorado).
     */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // Simplemente dispara un nuevo evento con el comando "cancelar"
        fireActionPerformed(new ActionEvent(this, ActionEvent.ACTION_PERFORMED, CANCEL_COMMAND));
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * Gestiona el evento de clic en el botón 'Aceptar'.
     * <p>
     * Dispara un {@link ActionEvent} con el comando de acción definido por
     * {@link #ACCEPT_COMMAND} para notificar a los listeners externos.
     *
     * @param evt El evento de acción que se ha producido (ignorado).
     */
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        // Simplemente dispara un nuevo evento con el comando "aceptar"
        fireActionPerformed(new ActionEvent(this, ActionEvent.ACTION_PERFORMED, ACCEPT_COMMAND));
    }//GEN-LAST:event_btnAceptarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    // End of variables declaration//GEN-END:variables
}
